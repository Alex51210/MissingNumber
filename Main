import java.util.Arrays;
import java.util.HashSet;

public class Main {

    public static void printMissingNumber(int[] nums) {
        // Проверка на длину
        if (nums.length < 3) {
            System.out.println("Последовательность неприемлемой длины");
            return;
        }

        int n = nums.length + 1;
        Arrays.sort(nums);

        // Проверяем, является ли массив последовательностью
        HashSet<Integer> set = new HashSet<>();
        for (int i = 1; i < nums.length; i++) {
            set.add(nums[i] - nums[i - 1]);
        }
        if (set.size() > 2) {
            System.out.println("Данный массив не является арифметической последовательностью");
            return;
        }

        // Находим максимальное и минимальное число в массиве
        int max = nums[0];
        int min = nums[nums.length - 1];

        // Вычисляем ожидаемую сумму от X1 до Xn
        int expectedSum = (min + max) * n / 2;

        // Вычисляем фактическую сумму элементов массива
        int actualSum = 0;
        for (int num : nums) {
            actualSum += num;
        }

        // Пропущенное число
        System.out.println("Пропущенное число в последовательности: " + (expectedSum - actualSum));
    }

    public static void main(String[] args) {
        // Тесты
        printMissingNumber(new int[]{5, 0, 1, 3, 2}); // Ожидаемый результат: 4
        printMissingNumber(new int[]{2, 2, 2, 2}); // Ожидаемый результат: 2
        printMissingNumber(new int[]{7, 9, 10, 11, 12}); // Ожидаемый результат: 8
        printMissingNumber(new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 10}); // Ожидаемый результат: 9
        printMissingNumber(new int[]{2, 4, 6, 8, 10, 14, 16, 18}); // Ожидаемый результат: 12
        printMissingNumber(new int[]{-3, -6, -9, -12, -15, -18, -24}); // Ожидаемый результат: -21
        printMissingNumber(new int[]{2, 7, 15, 32}); // Ожидаемый результат: Данный массив не является арифметической последовательностью
        printMissingNumber(new int[]{0, 1}); // Ожидаемый результат: Последовательность неприемлемой длины
    }
}
